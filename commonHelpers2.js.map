{"version":3,"file":"commonHelpers2.js","sources":["../src/img/snackbar-success-icon.svg","../src/js/2-snackbar.js"],"sourcesContent":["export default \"__VITE_ASSET__130a0fe3__\"","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport iconSuccess from '../img/snackbar-success-icon.svg';\nimport iconError from '../img/error-icon.svg';\n\nconst form = document.querySelector('.form');\nconst submitBtn = form.querySelector('button[type=submit]');\nconst delayInput = form.querySelector('input[name=delay]');\nconst radioFulfilled = form.querySelector('input[value=fulfilled]');\nconst radioReject = form.querySelector('input[value=rejected]');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  //   const obj = {\n  //     delay: form.elements.delay.value,\n  //     shouldResolve: form.querySelector('input[type = radio]:checked').value,\n  //   };\n\n  const { delay, state } = e.currentTarget.elements;\n\n  let delayInput = delay.value;\n  let shouldResolve = state.value;\n\n  makePromise(delayInput, shouldResolve)\n    .then(delay => {\n      iziToast.show({\n        title: 'OK',\n        titleSize: '16px',\n        titleLineHeight: '24px',\n        titleColor: '#fff',\n        message: `✅ Fulfilled promise in ${delay}ms`,\n        messageColor: '#fff',\n        position: 'topCenter',\n        messageLineHeight: '24px',\n        messageSize: '16px',\n        backgroundColor: '#59A10D',\n        iconUrl: iconSuccess,\n        theme: 'dark',\n        transitionIn: 'fadeIn,',\n      });\n    })\n    .catch(error => {\n      iziToast.show({\n        title: 'Error',\n        titleColor: '#fff',\n        titleLineHeight: '24px',\n        titleSize: '16px',\n        message: `❌ Rejected promise in ${error}ms`,\n        messageColor: '#fff',\n        messageLineHeight: '24px',\n        backgroundColor: '#EF4040',\n        position: 'topCenter',\n        messageSize: '16px',\n        iconUrl: iconError,\n        transitionIn: 'fadeIn,',\n        theme: 'dark',\n      });\n    });\n\n  form.reset();\n});\n\nconst makePromise = (delay, shouldResolve) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve === 'fulfilled') {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n  });\n};\n"],"names":["iconSuccess","form","delay","state","delayInput","shouldResolve","makePromise","iziToast","error","iconError","resolve","reject"],"mappings":"oGAAA,MAAeA,EAAA,2DCMTC,EAAO,SAAS,cAAc,OAAO,EACzBA,EAAK,cAAc,qBAAqB,EACvCA,EAAK,cAAc,mBAAmB,EAClCA,EAAK,cAAc,wBAAwB,EAC9CA,EAAK,cAAc,uBAAuB,EAE9DA,EAAK,iBAAiB,SAAU,GAAK,CACnC,EAAE,eAAc,EAMhB,KAAM,CAAE,MAAAC,EAAO,MAAAC,CAAK,EAAK,EAAE,cAAc,SAEzC,IAAIC,EAAaF,EAAM,MACnBG,EAAgBF,EAAM,MAE1BG,EAAYF,EAAYC,CAAa,EAClC,KAAKH,GAAS,CACbK,EAAS,KAAK,CACZ,MAAO,KACP,UAAW,OACX,gBAAiB,OACjB,WAAY,OACZ,QAAS,0BAA0BL,CAAK,KACxC,aAAc,OACd,SAAU,YACV,kBAAmB,OACnB,YAAa,OACb,gBAAiB,UACjB,QAASF,EACT,MAAO,OACP,aAAc,SACtB,CAAO,CACP,CAAK,EACA,MAAMQ,GAAS,CACdD,EAAS,KAAK,CACZ,MAAO,QACP,WAAY,OACZ,gBAAiB,OACjB,UAAW,OACX,QAAS,yBAAyBC,CAAK,KACvC,aAAc,OACd,kBAAmB,OACnB,gBAAiB,UACjB,SAAU,YACV,YAAa,OACb,QAASC,EACT,aAAc,UACd,MAAO,MACf,CAAO,CACP,CAAK,EAEHR,EAAK,MAAK,CACZ,CAAC,EAED,MAAMK,EAAc,CAACJ,EAAOG,IACnB,IAAI,QAAQ,CAACK,EAASC,IAAW,CACtC,WAAW,IAAM,CACXN,IAAkB,YACpBK,EAAQR,CAAK,EAEbS,EAAOT,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG"}